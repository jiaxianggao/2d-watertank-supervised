%MLP model for Case1.1 with skip 3 injection, random 20% validation set

% run D:\matlabwork\eidors-v3.11-ng\eidors\startup.m

clear

% Load data

load("case1_1_skip3_fn_10000.mat")

num_nds = size(img.fwd_model.nodes,1);
num_meas = length(features(:,1));
num_elms = length(labels(:,1));

P=0.8;
N=length(features);
idx=randperm(N);
Xtrain = features(:,idx(1:round(P*N)));
XValidation = features(:,idx(round(P*N)+1:end));
Ytrain = labels(:,idx(1:round(P*N)));
YValidation = labels(:,idx(round(P*N)+1:end)); 


% build a model

layers = [...
    sequenceInputLayer(num_meas)
    fullyConnectedLayer(1024,'WeightsInitializer','he')
    reluLayer
    dropoutLayer(0.5)
    fullyConnectedLayer(2048,'WeightsInitializer','he')
    reluLayer
    dropoutLayer(0.5)
    fullyConnectedLayer(3062,'WeightsInitializer','he')
    reluLayer
    dropoutLayer(0.5)
    fullyConnectedLayer(num_elms,'WeightsInitializer','he')
    regressionLayer];

% training

options = trainingOptions("adam", ...
    MaxEpochs=600, ...
    InitialLearnRate=0.001, ...
    LearnRateSchedule="none", ...
    LearnRateDropPeriod=50, ...
    LearnRateDropFactor=0.9,...
    GradientDecayFactor=0.9, ...
    SquaredGradientDecayFactor=0.999, ...
    MiniBatchSize=20, ...
    Plots="training-progress", ...
    L2Regularization=0.0001, ...
    ValidationData={XValidation,YValidation}, ...
    ValidationFrequency=10, ...
    CheckpointPath="", ...
    CheckpointFrequency=400, ...
    CheckpointFrequencyUnit="epoch", ...
    OutputNetwork="best-validation-loss", ...
    ExecutionEnvironment="gpu");

net1=trainNetwork(Xtrain, Ytrain, layers, options);

% Load checkpoint network

% load('net_checkpoint__1200__2023_05_30__19_55_33.mat', 'net')

% Specify training options

% options = trainingOptions("adam", ...
%     MaxEpochs=1600, ...
%     InitialLearnRate=0.0001, ...
%     LearnRateSchedule="none", ...
%     LearnRateDropPeriod=50, ...
%     LearnRateDropFactor=0.9,...
%     GradientDecayFactor=0.9, ...
%     SquaredGradientDecayFactor=0.999, ...
%     MiniBatchSize=20, ...
%     Plots="training-progress", ...
%     L2Regularization=0.0001, ...
%     ValidationData={XValidation,YValidation}, ...
%     ValidationFrequency=10, ...
%     CheckpointPath="D:\matlabwork\watertank-finland\neural_networks\MSE", ...
%     CheckpointFrequency=400, ...
%     CheckpointFrequencyUnit="epoch", ...
%     OutputNetwork="best-validation-loss", ...
%     ExecutionEnvironment="gpu");

% Resume training

% net2 = trainNetwork(Xtrain, Ytrain, net.Layers, options);

% Save a network

% save('net_case1_1_skip3_fn_pi.mat','net')

% Load a network

% load("net_case1_1_skip3_fn_pi.mat")

% Prediction

img.elem_data = predict(net1,Uel);
show_fem(img);